{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","takeNumber","event","setState","finalCalculation","state","operator","prevState","secondNumber","target","value","firstNumber","takeOperator","answer","Number","dotButton","length","delbutton","newSecondNum","slice","newFirstNum","clearButton","sqrtButton","Math","sqrt","squareButton","pow","className","this","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.395097b3.chunk.js","sourcesContent":["import React from 'react'\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      firstNumber: '',\r\n      secondNumber: '',\r\n      operator: '',\r\n      finalCalculation: ''\r\n    }\r\n  }\r\n\r\n\r\n  takeNumber = (event) => {\r\n    this.setState({ finalCalculation: '' })\r\n    if(!this.state.operator) {\r\n      if(this.state.firstNumber !== '0')\r\n      this.setState(prevState => {\r\n        return {\r\n          firstNumber: prevState.firstNumber + event.target.value\r\n        }\r\n      })\r\n    } else {\r\n      this.setState(prevState => {\r\n        return {\r\n          secondNumber: prevState.secondNumber + event.target.value\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  takeOperator = (event) => {\r\n    this.setState({ operator: event.target.value })\r\n  }\r\n\r\n  answer = () => {\r\n    const { operator } = this.state\r\n    let firstNumber = Number(this.state.firstNumber)\r\n    let secondNumber = Number(this.state.secondNumber)\r\n    if(operator === '*') {\r\n      this.setState({ \r\n        finalCalculation: firstNumber * secondNumber,\r\n        firstNumber: firstNumber * secondNumber\r\n      })\r\n    } else if(operator === '/') {\r\n      this.setState({ \r\n        finalCalculation: firstNumber / secondNumber,\r\n        firstNumber: firstNumber / secondNumber\r\n      })\r\n    } else if(operator === '+') {\r\n      this.setState({ \r\n        finalCalculation: firstNumber + secondNumber,\r\n        firstNumber: firstNumber + secondNumber\r\n      })\r\n    } else if(operator === '-') {\r\n      this.setState({ \r\n        finalCalculation: firstNumber - secondNumber,\r\n        firstNumber: firstNumber - secondNumber\r\n      })\r\n    }\r\n  }\r\n\r\n  dotButton = () => {\r\n    const { firstNumber, secondNumber, operator } = this.state \r\n    if(!operator) {\r\n      if(firstNumber && firstNumber[firstNumber.length - 1] !== '.') {\r\n        this.setState(prevState => {\r\n          return {\r\n            firstNumber: prevState.firstNumber + '.'\r\n          }\r\n        })\r\n      }\r\n    } else {\r\n      if(secondNumber && secondNumber[secondNumber.length - 1] !== '.') {\r\n        this.setState(prevState => {\r\n          return {\r\n            secondNumber: prevState.secondNumber + '.'\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  delbutton = () => {\r\n    const { firstNumber, secondNumber, operator } = this.state\r\n    if(firstNumber && !secondNumber && !operator) {\r\n      let newFirstNum = firstNumber.slice(0, firstNumber.length - 1)\r\n      this.setState({ firstNumber: newFirstNum })\r\n    } else if(firstNumber && operator && !secondNumber) {\r\n      this.setState({ operator: '' })\r\n    } else if(firstNumber && operator && secondNumber) {\r\n      let newSecondNum = secondNumber.slice(0, secondNumber.length - 1)\r\n      this.setState({ secondNumber: newSecondNum })\r\n    }\r\n  }\r\n\r\n  clearButton = () => {\r\n    this.setState({\r\n      firstNumber: '',\r\n      secondNumber: '',\r\n      operator: '',\r\n      finalCalculation: ''\r\n    })\r\n  }\r\n\r\n  sqrtButton = () => {\r\n    this.setState({ \r\n      finalCalculation: Math.sqrt(this.state.firstNumber), \r\n      firstNumber: Math.sqrt(this.state.firstNumber)\r\n    })\r\n  }\r\n\r\n  squareButton = () => {\r\n    this.setState({\r\n       finalCalculation: Math.pow(this.state.firstNumber, 2),\r\n       firstNumber: Math.pow(this.state.firstNumber, 2) \r\n      })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className='tc'>\r\n        <div className='displayCalculation tc'>\r\n          {\r\n            this.state.finalCalculation ? <p>{this.state.finalCalculation}</p> : this.state.operator ? <p>{this.state.secondNumber}</p> : <p>{this.state.firstNumber}</p>\r\n          }  \r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button onClick={this.clearButton}>Clear</button>\r\n          <button onClick={this.delbutton}>Del</button>\r\n          <button onClick={this.sqrtButton}>√</button>\r\n          <button onClick={this.squareButton}>x²</button>\r\n          <br />\r\n          <button value={7} onClick={this.takeNumber}>7</button>\r\n          <button value={8} onClick={this.takeNumber}>8</button>\r\n          <button value={9} onClick={this.takeNumber}>9</button>\r\n          <button value={'/'} onClick={this.takeOperator}>/</button>\r\n          <br />\r\n          <button value={4} onClick={this.takeNumber}>4</button>\r\n          <button value={5} onClick={this.takeNumber}>5</button>\r\n          <button value={6} onClick={this.takeNumber}>6</button>\r\n          <button value={'*'} onClick={this.takeOperator}>*</button>\r\n          <br />\r\n          <button value={1} onClick={this.takeNumber}>1</button>\r\n          <button value={2} onClick={this.takeNumber}>2</button>\r\n          <button value={3} onClick={this.takeNumber}>3</button>\r\n          <button value={'+'} onClick={this.takeOperator}>+</button>\r\n          <br />\r\n          <button onClick={this.dotButton}>.</button>\r\n          <button value={0} onClick={this.takeNumber}>0</button>\r\n          <button onClick={this.answer}>=</button>\r\n          <button value={'-'} onClick={this.takeOperator}>-</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  } \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'tachyons'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}